# Run tests and linter

name: Validate

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  run-tests:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [2.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - run: |
        git config --global user.name tester
        git config --global user.email tester@example.com
    - run: |
        mkdir -p tmp/origin.git
        cd tmp
        echo --- git init in: $PWD
        git init --bare origin.git
        echo --- git clone:
        git clone origin.git work
        cd work
        echo --- adding foo:
        touch foo
        git add foo
        echo ---- committing
        git commit -m sample
        echo ---- pushing
        git push origin master
        echo ---- adding and pushing tag
        git tag -a v1.0 -m "Version 1.0"
        git push --tags origin master
        echo ---- done
        cd ../..
        rm -rf tmp
        echo ---- removed tmp

    - run: pip install -U pip tox
    - run: tox -e py
    - run: |
        mkdir -p .tox/ci-artifacts
        mv .tox/.coverage.py .tox/ci-artifacts/.coverage.${{ matrix.python-version }}
        mv .tox/py/junit.xml .tox/ci-artifacts/junit.${{ matrix.python-version }}.xml
      if: ${{ always() }}
    - uses: actions/upload-artifact@v2
      with:
        name: ci-artifacts-${{ matrix.python-version }}
        path: .tox/ci-artifacts
      if: ${{ always() }}

  check-code-style:

    needs: run-tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - uses: actions/download-artifact@v2
      with:
        path: .tox
    - run: |
        mv .tox/ci-artifacts*/* .tox/ci-artifacts*/.coverage* .tox/
        rm -r .tox/ci-artifacts*

    - run: pip install -U pip tox
    - run: tox -e coverage,docs,style
